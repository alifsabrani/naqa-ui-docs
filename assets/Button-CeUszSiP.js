import{j as s}from"./iframe-DEDSHorF.js";import{c as h}from"./index-Cxy1aMCg.js";const y="_button_18iyu_9",p="_anchor_18iyu_33",f="_transparent_18iyu_33",b="_s_18iyu_41",w="_m_18iyu_1",v="_l_18iyu_57",g="_xl_18iyu_65",x="_icon_18iyu_77",B="_fill_18iyu_109",T="_primary_18iyu_117",k="_secondary_18iyu_133",R="_warning_18iyu_149",N="_error_18iyu_165",q="_info_18iyu_181",j="_success_18iyu_197",S="_dark_18iyu_213",C="_light_18iyu_229",L="_rounded_18iyu_383",z="_withShadow_18iyu_391",e={button:y,anchor:p,transparent:f,s:b,m:w,l:v,xl:g,icon:x,fill:B,primary:T,secondary:k,warning:R,error:N,info:q,success:j,dark:S,light:C,rounded:L,withShadow:z},E=({children:a,variant:i="fill",size:l="m",color:u="primary",icon:c,rounded:d,withShadow:m,as:_,href:o,...n})=>{const t=_||(o?"a":"button"),r=h(e.button,e[i],e[l],e[u],{[e.icon]:c,[e.rounded]:d,[e.withShadow]:m,[e.anchor]:t!=="button",[n.className]:n.className});return t==="button"?s.jsx("button",{...n,type:"button",className:r,children:a}):s.jsx(t,{...n,className:r,href:o,children:a})};E.__docgenInfo={description:`Button component for user interactions.
Supports various styles, sizes, and colors. It is now polymorphic,
rendering as a button, an anchor, or a custom component.
@example
\`\`\`tsx
// Renders a native button
<Button onClick={() => {}}>Click Me</Button>

// Renders a native anchor tag
<Button href="/about">About Us</Button>

// Renders a custom component (e.g., Next.js Link)
<Button as={Link} href="/dashboard">Dashboard</Button>
\`\`\``,methods:[],displayName:"Button",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Content to be rendered inside the button"},variant:{required:!1,tsType:{name:"union",raw:"'fill' | 'transparent'",elements:[{name:"literal",value:"'fill'"},{name:"literal",value:"'transparent'"}]},description:"Button style variant",defaultValue:{value:"'fill'",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"'s' | 'm' | 'l' | 'xl'",elements:[{name:"literal",value:"'s'"},{name:"literal",value:"'m'"},{name:"literal",value:"'l'"},{name:"literal",value:"'xl'"}]},description:"Button size",defaultValue:{value:"'m'",computed:!1}},color:{required:!1,tsType:{name:"union",raw:"'primary' | 'secondary' | 'warning' | 'error' | 'info' | 'success' | 'light' | 'dark'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'error'"},{name:"literal",value:"'info'"},{name:"literal",value:"'success'"},{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Button color scheme",defaultValue:{value:"'primary'",computed:!1}},icon:{required:!1,tsType:{name:"boolean"},description:"Whether the button contains only an icon"},rounded:{required:!1,tsType:{name:"boolean"},description:"Whether the button has rounded corners"},withShadow:{required:!1,tsType:{name:"boolean"},description:"Whether the button has a shadow effect"},href:{required:!1,tsType:{name:"string"},description:`URL to navigate to when the button is clicked.
This is used when rendering the button as an anchor tag.`},as:{required:!1,tsType:{name:"ReactElementType",raw:"React.ElementType"},description:"Renders the button as a different component or HTML element.\nUseful for integrating with routing libraries like Next.js's `Link`."}}};export{E as B};
